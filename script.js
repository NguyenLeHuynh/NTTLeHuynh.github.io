// Chuy·ªÉn section v·ªõi hi·ªáu ·ª©ng fade
const navButtons = document.querySelectorAll('nav .nav-btn');
const sections = document.querySelectorAll('main .section');

navButtons.forEach(btn => {
  btn.addEventListener('click', () => {
    if (btn.classList.contains('active')) return;

    // X√≥a active c·ªßa n√∫t tr∆∞·ªõc, active section tr∆∞·ªõc
    document.querySelector('nav .nav-btn.active').classList.remove('active');
    document.querySelector('main .section.active').classList.remove('active');

    btn.classList.add('active');
    const targetId = btn.dataset.section;
    const targetSection = document.getElementById(targetId);

    // Th√™m active section m·ªõi v·ªõi delay nh·ªè ƒë·ªÉ fade animation m∆∞·ª£t
    targetSection.classList.add('active');
  });
});

// Toggle ch·∫ø ƒë·ªô t·ªëi/s√°ng
const toggleThemeBtn = document.getElementById('toggleTheme');
toggleThemeBtn.addEventListener('click', () => {
  document.body.classList.toggle('dark');
  // ƒê·ªïi icon n√∫t
  if(document.body.classList.contains('dark')) {
    toggleThemeBtn.textContent = '‚òÄÔ∏è';
  } else {
    toggleThemeBtn.textContent = 'üåô';
  }
});

// Modal ƒëƒÉng nh·∫≠p, ƒëƒÉng k√Ω
const loginModal = document.getElementById('loginModal');
const registerModal = document.getElementById('registerModal');
const btnLoginOpen = document.getElementById('btnLoginOpen');
const btnRegisterOpen = document.getElementById('btnRegisterOpen');
const closeLogin = document.getElementById('closeLogin');
const closeRegister = document.getElementById('closeRegister');

btnLoginOpen.addEventListener('click', () => {
  loginModal.classList.add('show');
  loginModal.setAttribute('aria-hidden', 'false');
});
btnRegisterOpen.addEventListener('click', () => {
  registerModal.classList.add('show');
  registerModal.setAttribute('aria-hidden', 'false');
});
closeLogin.addEventListener('click', () => {
  loginModal.classList.remove('show');
  loginModal.setAttribute('aria-hidden', 'true');
  clearLoginForm();
});
closeRegister.addEventListener('click', () => {
  registerModal.classList.remove('show');
  registerModal.setAttribute('aria-hidden', 'true');
  clearRegisterForm();
});

// ƒê√≥ng modal khi click ra ngo√†i modal-content
window.addEventListener('click', (e) => {
  if (e.target === loginModal) {
    loginModal.classList.remove('show');
    loginModal.setAttribute('aria-hidden', 'true');
    clearLoginForm();
  }
  if (e.target === registerModal) {
    registerModal.classList.remove('show');
    registerModal.setAttribute('aria-hidden', 'true');
    clearRegisterForm();
  }
});

// Fake h·ªá th·ªëng ƒëƒÉng k√Ω/ƒëƒÉng nh·∫≠p l∆∞u localStorage
const registerForm = document.getElementById('registerForm');
const loginForm = document.getElementById('loginForm');
const registerMsg = document.getElementById('registerMsg');
const loginMsg = document.getElementById('loginMsg');

registerForm.addEventListener('submit', e => {
  e.preventDefault();
  const email = document.getElementById('regEmail').value.trim();
  const pass = document.getElementById('regPassword').value;

  if(localStorage.getItem('user_' + email)) {
    registerMsg.textContent = 'Email ƒë√£ ƒë∆∞·ª£c ƒëƒÉng k√Ω.';
    registerMsg.style.color = 'red';
  } else {
    localStorage.setItem('user_' + email, pass);
    registerMsg.textContent = 'ƒêƒÉng k√Ω th√†nh c√¥ng! B·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p.';
    registerMsg.style.color = 'green';
    registerForm.reset();
  }
});

loginForm.addEventListener('submit', e => {
  e.preventDefault();
  const email = document.getElementById('loginEmail').value.trim();
  const pass = document.getElementById('loginPassword').value;

  const storedPass = localStorage.getItem('user_' + email);
  if(storedPass && storedPass === pass) {
    loginMsg.textContent = 'ƒêƒÉng nh·∫≠p th√†nh c√¥ng! Ch√†o m·ª´ng b·∫°n.';
    loginMsg.style.color = 'green';

    setTimeout(() => {
      loginModal.classList.remove('show');
      loginModal.setAttribute('aria-hidden', 'true');
      loginForm.reset();
      loginMsg.textContent = '';

      // Thay ƒë·ªïi giao di·ªán khi ƒë√£ ƒëƒÉng nh·∫≠p (ƒë∆°n gi·∫£n)
      btnLoginOpen.style.display = 'none';
      btnRegisterOpen.style.display = 'none';

      // Hi·ªÉn th·ªã t√™n ng∆∞·ªùi d√πng l√™n header
      const userNameDisplay = document.createElement('span');
      userNameDisplay.id = 'userNameDisplay';
      userNameDisplay.textContent = `Xin ch√†o, ${email}`;
      userNameDisplay.style.color = 'var(--primary)';
      document.querySelector('header .auth').appendChild(userNameDisplay);
    }, 1200);

  } else {
    loginMsg.textContent = 'Email ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng.';
    loginMsg.style.color = 'red';
  }
});

function clearLoginForm() {
  loginForm.reset();
  loginMsg.textContent = '';
}
function clearRegisterForm() {
  registerForm.reset();
  registerMsg.textContent = '';
}

// Mini game: b·∫Øn b√≥ng ƒë∆°n gi·∫£n
const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

const restartBtn = document.getElementById('restartGame');
const scoreDisplay = document.getElementById('score');

let balls = [];
let score = 0;
let animationId;

class Ball {
  constructor()
